name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Backend Tests
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: apay_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        working-directory: ./backend
        run: pnpm install

      - name: Run Prisma migrations
        working-directory: ./backend
        run: pnpm prisma:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/apay_test

      - name: Run tests
        working-directory: ./backend
        run: pnpm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/apay_test

      - name: Generate coverage report
        working-directory: ./backend
        run: pnpm test:coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/apay_test

  # Frontend Tests
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Run unit tests
        working-directory: ./frontend
        run: pnpm test

      - name: Build frontend
        working-directory: ./frontend
        run: pnpm build

  # E2E Tests
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: apay_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install backend dependencies
        working-directory: ./backend
        run: pnpm install

      - name: Run Prisma migrations
        working-directory: ./backend
        run: pnpm prisma:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/apay_test

      - name: Seed database
        working-directory: ./backend
        run: pnpm prisma:seed
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/apay_test

      - name: Start backend server
        working-directory: ./backend
        run: pnpm dev &
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/apay_test
          PORT: 3000

      - name: Wait for backend
        run: npx wait-on http://localhost:3000/health

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        working-directory: ./frontend
        run: pnpm test:e2e
        env:
          VITE_API_URL: http://localhost:3000

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

  # Lint & Format
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install backend dependencies
        working-directory: ./backend
        run: pnpm install

      - name: Lint backend
        working-directory: ./backend
        run: pnpm lint

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Lint frontend
        working-directory: ./frontend
        run: pnpm lint
